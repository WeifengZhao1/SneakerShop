{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction UserAPI(token) {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [cart, setCart] = useState([]);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get(\"/user/infor\", {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n          console.log(res);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n\n  const addCart = async product => {\n    if (!isLogged) return alert(\"Please login\");\n    const check = cart.every(item => {\n      return item._id !== product._id;\n    });\n\n    if (check) {\n      setCart([...cart, { ...product,\n        quantity: 1\n      }]);\n    } else {\n      alert(\"Product Added\");\n    }\n  };\n\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    cart: [cart, setCart],\n    addCart: addCart\n  };\n}\n\n_s(UserAPI, \"bRWEenHGuj23AV38AmLORPHuZ9g=\");\n\n_c = UserAPI;\nexport default UserAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAPI\");","map":{"version":3,"sources":["/Users/weifeng/Desktop/SneakerShop/client/src/api/UserAPI.js"],"names":["React","useState","useEffect","axios","UserAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","cart","setCart","getUser","res","get","headers","Authorization","data","role","console","log","err","alert","response","msg","addCart","product","check","every","item","_id","quantity"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,KAAJ,EAAW;AACT,YAAMO,OAAO,GAAG,YAAY;AAC1B,YAAI;AACF,gBAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,aAAV,EAAyB;AACzCC,YAAAA,OAAO,EAAE;AAAEC,cAAAA,aAAa,EAAEX;AAAjB;AADgC,WAAzB,CAAlB;AAGAE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAM,UAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,CAAlB,GAAsBT,UAAU,CAAC,IAAD,CAAhC,GAAyCA,UAAU,CAAC,KAAD,CAAnD;AAEAU,UAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACD,SARD,CAQE,OAAOQ,GAAP,EAAY;AACZC,UAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaN,IAAb,CAAkBO,GAAnB,CAAL;AACD;AACF,OAZD;;AAaAZ,MAAAA,OAAO;AACR;AACF,GAjBQ,EAiBN,CAACP,KAAD,CAjBM,CAAT;;AAmBA,QAAMoB,OAAO,GAAG,MAAOC,OAAP,IAAmB;AACjC,QAAI,CAACpB,QAAL,EAAe,OAAOgB,KAAK,CAAC,cAAD,CAAZ;AAEf,UAAMK,KAAK,GAAGjB,IAAI,CAACkB,KAAL,CAAYC,IAAD,IAAU;AACjC,aAAOA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAA5B;AACD,KAFa,CAAd;;AAIA,QAAIH,KAAJ,EAAW;AACThB,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU,EAAE,GAAGgB,OAAL;AAAcK,QAAAA,QAAQ,EAAE;AAAxB,OAAV,CAAD,CAAP;AACD,KAFD,MAEO;AACLT,MAAAA,KAAK,CAAC,eAAD,CAAL;AACD;AACF,GAZD;;AAcA,SAAO;AACLhB,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CADL;AAELC,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV,CAFJ;AAGLC,IAAAA,IAAI,EAAE,CAACA,IAAD,EAAOC,OAAP,CAHD;AAILc,IAAAA,OAAO,EAAEA;AAJJ,GAAP;AAMD;;GA5CQrB,O;;KAAAA,O;AA8CT,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction UserAPI(token) {\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [cart, setCart] = useState([]);\n\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get(\"/user/infor\", {\n            headers: { Authorization: token },\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n\n          console.log(res);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n      getUser();\n    }\n  }, [token]);\n\n  const addCart = async (product) => {\n    if (!isLogged) return alert(\"Please login\");\n\n    const check = cart.every((item) => {\n      return item._id !== product._id;\n    });\n\n    if (check) {\n      setCart([...cart, { ...product, quantity: 1 }]);\n    } else {\n      alert(\"Product Added\");\n    }\n  };\n\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    cart: [cart, setCart],\n    addCart: addCart,\n  };\n}\n\nexport default UserAPI;\n"]},"metadata":{},"sourceType":"module"}