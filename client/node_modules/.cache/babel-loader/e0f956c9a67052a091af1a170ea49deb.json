{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction UserAPI(token) {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [cart] = useState([]);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/infor', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false); //setCart(res.data.cart)\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n\n  const addCart = async product => {\n    if (!isLogged) return alert(\"Please Login\");\n    const check = cart.every(item => {\n      return item._id !== product._id;\n    });\n\n    if (check) {\n      //setCart([...cart, {...product, quantity: 1}])\n      await axios.patch('/user/addcart', {\n        cart: [...cart, { ...product,\n          quantity: 1\n        }]\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n    } else {\n      alert(\"Product Added\");\n    }\n  };\n\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    cart: [cart, setCart],\n    addCart: addCart\n  };\n}\n\n_s(UserAPI, \"Revk0hZyNQ7fcrU5UPT07C/NiyA=\");\n\n_c = UserAPI;\nexport default UserAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAPI\");","map":{"version":3,"sources":["/Users/weifeng/Desktop/SneakerShop/client/src/api/UserAPI.js"],"names":["React","useState","useEffect","axios","UserAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","cart","getUser","res","get","headers","Authorization","data","role","err","alert","response","msg","addCart","product","check","every","item","_id","patch","quantity","setCart"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,IAAD,IAAST,QAAQ,CAAC,EAAD,CAAvB;AAEFC,EAAAA,SAAS,CAAC,MAAK;AACb,QAAGG,KAAH,EAAS;AACL,YAAMM,OAAO,GAAG,YAAW;AACvB,YAAI;AACA,gBAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,aAAV,EAAyB;AACvCC,YAAAA,OAAO,EAAE;AAACC,cAAAA,aAAa,EAAEV;AAAhB;AAD8B,WAAzB,CAAlB;AAIAE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAK,UAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,CAAlB,GAAsBR,UAAU,CAAC,IAAD,CAAhC,GAAyCA,UAAU,CAAC,KAAD,CAAnD,CANA,CAQA;AAEH,SAVD,CAUE,OAAOS,GAAP,EAAY;AACVC,UAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaJ,IAAb,CAAkBK,GAAnB,CAAL;AACH;AACJ,OAdD;;AAgBAV,MAAAA,OAAO;AAEV;AACJ,GArBU,EAqBT,CAACN,KAAD,CArBS,CAAT;;AAuBA,QAAMiB,OAAO,GAAG,MAAOC,OAAP,IAAmB;AACjC,QAAG,CAACjB,QAAJ,EAAc,OAAOa,KAAK,CAAC,cAAD,CAAZ;AAEd,UAAMK,KAAK,GAAGd,IAAI,CAACe,KAAL,CAAWC,IAAI,IAAG;AAC5B,aAAOA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAA5B;AACH,KAFa,CAAd;;AAIA,QAAGH,KAAH,EAAS;AACL;AAEA,YAAMrB,KAAK,CAACyB,KAAN,CAAY,eAAZ,EAA6B;AAAClB,QAAAA,IAAI,EAAE,CAAC,GAAGA,IAAJ,EAAU,EAAC,GAAGa,OAAJ;AAAaM,UAAAA,QAAQ,EAAE;AAAvB,SAAV;AAAP,OAA7B,EAA2E;AAC7Ef,QAAAA,OAAO,EAAE;AAACC,UAAAA,aAAa,EAAEV;AAAhB;AADoE,OAA3E,CAAN;AAIH,KAPD,MAOK;AACDc,MAAAA,KAAK,CAAC,eAAD,CAAL;AACH;AACJ,GAjBC;;AAmBA,SAAO;AACLb,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CADL;AAELC,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV,CAFJ;AAGLC,IAAAA,IAAI,EAAE,CAACA,IAAD,EAAOoB,OAAP,CAHD;AAILR,IAAAA,OAAO,EAAEA;AAJJ,GAAP;AAMD;;GArDQlB,O;;KAAAA,O;AAuDT,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n\nfunction UserAPI(token) {\n    const [isLogged, setIsLogged] = useState(false)\n    const [isAdmin, setIsAdmin] = useState(false)\n    const [cart] = useState([])\n\n  useEffect(() =>{\n    if(token){\n        const getUser = async () =>{\n            try {\n                const res = await axios.get('/user/infor', {\n                    headers: {Authorization: token}\n                })\n\n                setIsLogged(true)\n                res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\n\n                //setCart(res.data.cart)\n\n            } catch (err) {\n                alert(err.response.data.msg)\n            }\n        }\n\n        getUser()\n        \n    }\n},[token])\n\n  const addCart = async (product) => {\n    if(!isLogged) return alert(\"Please Login\")\n\n    const check = cart.every(item =>{\n        return item._id !== product._id\n    })\n\n    if(check){\n        //setCart([...cart, {...product, quantity: 1}])\n\n        await axios.patch('/user/addcart', {cart: [...cart, {...product, quantity: 1}]}, {\n            headers: {Authorization: token}\n        })\n\n    }else{\n        alert(\"Product Added\")\n    }\n}\n\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    cart: [cart, setCart],\n    addCart: addCart,\n  }\n}\n\nexport default UserAPI;\n"]},"metadata":{},"sourceType":"module"}