{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction UserAPI(token) {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [cart, setCart] = useState([]);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/infor', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n          console.log(res);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n\n  const addCart = async product => {\n    if (!isLogged) return alert(\"Please login\");\n    const check = cart.every(item => {\n      return item._id !== product._id;\n    });\n\n    if (check) {\n      setCart([...cart, { ...product,\n        quantity: 1\n      }]);\n    } else {\n      alert(\"Product Added\");\n    }\n  };\n\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    cart: [cart, setCart],\n    addCart: addCart\n  };\n}\n\n_s(UserAPI, \"mKBMlcSzOL4zdnCHHgDRPiGLqqY=\");\n\n_c = UserAPI;\nexport default UserAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAPI\");","map":{"version":3,"sources":["/Users/weifeng/Desktop/SneakerShop/client/src/api/UserAPI.js"],"names":["React","useState","useEffect","axios","UserAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","cart","setCart","getUser","res","get","headers","Authorization","data","role","console","log","err","alert","response","msg","addCart","product","check","every","item","_id","quantity"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,IAAD,EAAMC,OAAN,IAAiBV,QAAQ,CAAC,EAAD,CAA/B;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGG,KAAH,EAAS;AACL,YAAMO,OAAO,GAAG,YAAY;AACxB,YAAI;AACA,gBAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,aAAV,EAAyB;AACvCC,YAAAA,OAAO,EAAE;AAACC,cAAAA,aAAa,EAAEX;AAAhB;AAD8B,WAAzB,CAAlB;AAGAE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAM,UAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,CAAlB,GAAsBT,UAAU,CAAC,IAAD,CAAhC,GAAyCA,UAAU,CAAC,KAAD,CAAnD;AAEAU,UAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AAEH,SATD,CASE,OAAOQ,GAAP,EAAY;AACVC,UAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaN,IAAb,CAAkBO,GAAnB,CAAL;AACH;AACJ,OAbD;;AAcAZ,MAAAA,OAAO;AACV;AACJ,GAlBQ,EAkBP,CAACP,KAAD,CAlBO,CAAT;;AAoBA,QAAMoB,OAAO,GAAG,MAAOC,OAAP,IAAmB;AAC/B,QAAI,CAACpB,QAAL,EAAe,OAAOgB,KAAK,CAAC,cAAD,CAAZ;AAEf,UAAMK,KAAK,GAAGjB,IAAI,CAACkB,KAAL,CAAWC,IAAI,IAAI;AAC7B,aAAOA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAA5B;AACH,KAFa,CAAd;;AAIA,QAAIH,KAAJ,EAAU;AACNhB,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAS,EAAC,GAAGgB,OAAJ;AAAYK,QAAAA,QAAQ,EAAE;AAAtB,OAAT,CAAD,CAAP;AACH,KAFD,MAGK;AACDT,MAAAA,KAAK,CAAC,eAAD,CAAL;AACH;AACJ,GAbD;;AAeF,SAAO;AACHhB,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAUC,WAAV,CADP;AAEHC,IAAAA,OAAO,EAAC,CAACA,OAAD,EAASC,UAAT,CAFL;AAGHC,IAAAA,IAAI,EAAE,CAACA,IAAD,EAAMC,OAAN,CAHH;AAIHc,IAAAA,OAAO,EAAEA;AAJN,GAAP;AAMD;;GA9CQrB,O;;KAAAA,O;AAgDT,eAAeA,OAAf","sourcesContent":["import React, {useState,useEffect} from 'react';\nimport axios from 'axios';\n\nfunction UserAPI(token) {\n    const [isLogged, setIsLogged] = useState(false)\n    const [isAdmin, setIsAdmin] = useState(false)\n    const [cart,setCart] = useState([])\n\n    useEffect(()=>{\n        if(token){\n            const getUser = async () => {\n                try {\n                    const res = await axios.get('/user/infor', {\n                        headers: {Authorization: token}\n                    })\n                    setIsLogged(true)\n                    res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\n                    \n                    console.log(res)\n\n                } catch (err) {\n                    alert(err.response.data.msg)\n                }\n            }\n            getUser()\n        }\n    },[token])\n    \n    const addCart = async (product) => {\n        if (!isLogged) return alert(\"Please login\")\n\n        const check = cart.every(item => {\n            return item._id !== product._id\n        })\n\n        if (check){\n            setCart([...cart,{...product,quantity: 1}])\n        }\n        else {\n            alert(\"Product Added\")\n        }\n    }\n\n  return {\n      isLogged: [isLogged,setIsLogged],\n      isAdmin:[isAdmin,setIsAdmin],\n      cart: [cart,setCart],\n      addCart: addCart\n    }\n}\n\nexport default UserAPI;\n"]},"metadata":{},"sourceType":"module"}